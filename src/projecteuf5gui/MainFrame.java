/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projecteuf5gui;

import entitats.Animal;
import entitats.Aliment;
import java.awt.event.WindowEvent;
import java.beans.Introspector;
import java.beans.PropertyDescriptor;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author alumne
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public MainFrame() {
        initComponents();
        try {
            carregaFitxer();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(), "Error en la càrrega", JOptionPane.ERROR_MESSAGE);
        } finally {
            setPrincipi();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        llistarButton = new javax.swing.JButton();
        crudAnimalButton = new javax.swing.JButton();
        crudAlimentButton = new javax.swing.JButton();
        sortirButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        AlimentPanel = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nomAlTextField = new javax.swing.JTextField();
        tipusAlTextField = new javax.swing.JTextField();
        calTextField = new javax.swing.JTextField();
        creaAlButton = new javax.swing.JButton();
        AnimalPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nomTextField = new javax.swing.JTextField();
        pesTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        creaAnimalButton = new javax.swing.JButton();
        tipusComboBox = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        AlimentsAnimalTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        borraAnimalButton = new javax.swing.JButton();
        modificaAnimalButton = new javax.swing.JButton();
        cancelAnimalButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        animalsTable = new javax.swing.JTable();
        llistarPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        llistarTable = new javax.swing.JTable();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(24, 29, 47));

        jPanel2.setBackground(new java.awt.Color(24, 29, 47));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Accions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(254, 254, 254)));
        jPanel2.setLayout(new java.awt.BorderLayout());

        llistarButton.setText("Llistar Animals");
        llistarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                llistarButtonActionPerformed(evt);
            }
        });
        jPanel2.add(llistarButton, java.awt.BorderLayout.LINE_START);

        crudAnimalButton.setText("CRUD Animal");
        crudAnimalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crudAnimalButtonActionPerformed(evt);
            }
        });
        jPanel2.add(crudAnimalButton, java.awt.BorderLayout.CENTER);

        crudAlimentButton.setText("CRUD Aliment");
        crudAlimentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crudAlimentButtonActionPerformed(evt);
            }
        });
        jPanel2.add(crudAlimentButton, java.awt.BorderLayout.PAGE_START);

        sortirButton.setText("Sortir");
        sortirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortirButtonActionPerformed(evt);
            }
        });
        jPanel2.add(sortirButton, java.awt.BorderLayout.PAGE_END);

        jPanel3.setBackground(new java.awt.Color(24, 29, 47));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        jPanel3.setLayout(new java.awt.CardLayout());

        AlimentPanel.setBackground(new java.awt.Color(29, 50, 47));

        jPanel6.setBackground(new java.awt.Color(29, 50, 47));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Creació", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, null, new java.awt.Color(255, 255, 255)));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nom :");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Tipus :");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Calories :");

        nomAlTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomAlTextFieldActionPerformed(evt);
            }
        });

        creaAlButton.setText("Crear");
        creaAlButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creaAlButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(creaAlButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nomAlTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(tipusAlTextField)
                            .addComponent(calTextField))))
                .addContainerGap(301, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(nomAlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tipusAlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(calTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(creaAlButton)
                .addContainerGap(170, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AlimentPanelLayout = new javax.swing.GroupLayout(AlimentPanel);
        AlimentPanel.setLayout(AlimentPanelLayout);
        AlimentPanelLayout.setHorizontalGroup(
            AlimentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AlimentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        AlimentPanelLayout.setVerticalGroup(
            AlimentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AlimentPanelLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        jPanel3.add(AlimentPanel, "card2");

        AnimalPanel.setBackground(new java.awt.Color(29, 50, 47));

        jPanel4.setBackground(new java.awt.Color(29, 50, 47));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CRUD", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, null, new java.awt.Color(255, 255, 255)));
        jPanel4.setForeground(new java.awt.Color(251, 237, 237));

        jLabel1.setForeground(new java.awt.Color(249, 235, 235));
        jLabel1.setText("Nom :");

        jLabel2.setForeground(new java.awt.Color(249, 239, 239));
        jLabel2.setText("Tipus :");

        jLabel3.setForeground(new java.awt.Color(248, 241, 241));
        jLabel3.setText("Pes :");

        jLabel4.setForeground(new java.awt.Color(250, 243, 243));
        jLabel4.setText("E-mail :");

        creaAnimalButton.setText("Crea");
        creaAnimalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creaAnimalButtonActionPerformed(evt);
            }
        });

        AlimentsAnimalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(AlimentsAnimalTable);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Aliments :");

        borraAnimalButton.setText("Borra");

        modificaAnimalButton.setText("Modifica");

        cancelAnimalButton.setText("Cancel·la");
        cancelAnimalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAnimalButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(nomTextField))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addGap(11, 11, 11)
                                            .addComponent(tipusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(emailTextField))))
                                .addComponent(pesTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(creaAnimalButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(borraAnimalButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(modificaAnimalButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 45, Short.MAX_VALUE))
                    .addComponent(cancelAnimalButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nomTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tipusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(creaAnimalButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(borraAnimalButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(modificaAnimalButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelAnimalButton))
        );

        jPanel5.setBackground(new java.awt.Color(29, 50, 47));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Llista", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, null, java.awt.Color.white));

        animalsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        animalsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                animalsTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(animalsTable);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 67, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AnimalPanelLayout = new javax.swing.GroupLayout(AnimalPanel);
        AnimalPanel.setLayout(AnimalPanelLayout);
        AnimalPanelLayout.setHorizontalGroup(
            AnimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AnimalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AnimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        AnimalPanelLayout.setVerticalGroup(
            AnimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AnimalPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.add(AnimalPanel, "card2");

        llistarPanel.setBackground(new java.awt.Color(29, 50, 47));

        llistarTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(llistarTable);

        javax.swing.GroupLayout llistarPanelLayout = new javax.swing.GroupLayout(llistarPanel);
        llistarPanel.setLayout(llistarPanelLayout);
        llistarPanelLayout.setHorizontalGroup(
            llistarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(llistarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(llistarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filler2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                    .addComponent(filler1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        llistarPanelLayout.setVerticalGroup(
            llistarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(llistarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filler2, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.add(llistarPanel, "card2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void llistarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_llistarButtonActionPerformed
        // TODO add your handling code here:
        ModelTaula<Animal> mt = new ModelTaula(new String[]{"Nom", "Tipus", "Pes", "E-mail del propietari", "Aliments"}, MainFrame.animals, Animal.class);

        llistarTable.setModel(mt);

        jPanel3.removeAll();
        jPanel3.revalidate();
        jPanel3.add(llistarPanel);
        jPanel3.revalidate();
        jPanel3.repaint();
    }//GEN-LAST:event_llistarButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:       
        guardaFitxer();
    }//GEN-LAST:event_formWindowClosing

    private void sortirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortirButtonActionPerformed
        // TODO add your handling code here:
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));

    }//GEN-LAST:event_sortirButtonActionPerformed

    private void crudAlimentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crudAlimentButtonActionPerformed
        // TODO add your handling code here:
        nomAlTextField.setText("");
        tipusAlTextField.setText("");
        calTextField.setText("");
        
        jPanel3.removeAll();
        jPanel3.revalidate();
        jPanel3.add(AlimentPanel);
        jPanel3.revalidate();
        jPanel3.repaint();
    }//GEN-LAST:event_crudAlimentButtonActionPerformed

    private void crudAnimalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crudAnimalButtonActionPerformed
        // TODO add your handling code here:
        nomTextField.setText("");
        tipusComboBox.setEditable(true);
        tipusComboBox.setSelectedIndex(0);
        pesTextField.setText("");
        emailTextField.setText("");
        
        ModelTaula<Aliment> mt = new ModelTaula(new String[]{"Nom", "Tipus", "Cal"},new ArrayList( MainFrame.aliments), Aliment.class);

        AlimentsAnimalTable.setModel(mt);
        
        ModelTaula<Animal> m = new ModelTaula(new String[]{"Nom", "Tipus", "Pes", "E-mail del propietari", "Aliments"}, MainFrame.animals, Animal.class);

        animalsTable.setModel(m);
        
        borraAnimalButton.setEnabled(false);
        modificaAnimalButton.setEnabled(false);
        
        jPanel3.removeAll();
        jPanel3.revalidate();
        jPanel3.add(AnimalPanel);
        jPanel3.revalidate();
        jPanel3.repaint();
    }//GEN-LAST:event_crudAnimalButtonActionPerformed

    private void creaAnimalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creaAnimalButtonActionPerformed
        // TODO add your handling code here:
        Animal a = new Animal(nomTextField.getText(),
                (String)tipusComboBox.getSelectedItem(),
                Double.valueOf(pesTextField.getText()),
                emailTextField.getText());
        int[] selecs=AlimentsAnimalTable.getSelectedRows();
        ArrayList<Aliment> alim=new ArrayList<>();
        for (int i = 0; i < selecs.length; i++) {
            alim.add((Aliment)AlimentsAnimalTable.getModel().getValueAt(selecs[i],-1));
        }
        a.set5menja(alim);
        animals.add(a);
        
        if(tipus.add((String)tipusComboBox.getSelectedItem())){
            tipusComboBox.addItem((String)tipusComboBox.getSelectedItem());
            tipus.add((String)tipusComboBox.getSelectedItem());
        }
        
        ModelTaula<Animal> m = new ModelTaula(new String[]{"Nom", "Tipus", "Pes", "E-mail del propietari", "Aliments"}, MainFrame.animals, Animal.class);

        animalsTable.setModel(m);
    }//GEN-LAST:event_creaAnimalButtonActionPerformed

    private void animalsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_animalsTableMouseClicked
        // TODO add your handling code here:
        int i=animalsTable.getSelectedRow();
        
        if(i!=-1){
            borraAnimalButton.setEnabled(true);
            modificaAnimalButton.setEnabled(true);


            ModelTaula<Animal> mt=(ModelTaula<Animal>)animalsTable.getModel();
            nomTextField.setText((String)mt.getValueAt(i, 0));
            tipusComboBox.setSelectedItem((String)mt.getValueAt(i, 1));
            pesTextField.setText(mt.getValueAt(i, 2).toString());
            emailTextField.setText(mt.getValueAt(i, 3).toString());
            
            ArrayList<Aliment> la=(ArrayList<Aliment>)mt.getValueAt(i, 4);
            AlimentsAnimalTable.getSelectionModel().clearSelection();
            if(!la.isEmpty()){
                ModelTaula<Aliment> mt2=(ModelTaula<Aliment>)AlimentsAnimalTable.getModel();
                for (int j = 0; j < mt2.getRowCount(); j++) {
                    if(la.contains((Aliment)mt2.getValueAt(j, -1)))
                        AlimentsAnimalTable.getSelectionModel().addSelectionInterval(j, j);

                }
            }
        }else{
            nomTextField.setText("");
            tipusComboBox.setSelectedIndex(0);
            pesTextField.setText("");
            emailTextField.setText("");
            AlimentsAnimalTable.getSelectionModel().clearSelection();  
            borraAnimalButton.setEnabled(false);
            modificaAnimalButton.setEnabled(false);

        }
    }//GEN-LAST:event_animalsTableMouseClicked

    private void nomAlTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomAlTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomAlTextFieldActionPerformed

    private void creaAlButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creaAlButtonActionPerformed
        // TODO add your handling code here:
         Aliment a = new Aliment(nomAlTextField.getText(),
                tipusAlTextField.getText(),
                Integer.valueOf(calTextField.getText()));
         aliments.add(a);
         
         JOptionPane.showMessageDialog(this, "Aliment creat");
    }//GEN-LAST:event_creaAlButtonActionPerformed

    private void cancelAnimalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAnimalButtonActionPerformed
        // TODO add your handling code here:
            nomTextField.setText("");
            tipusComboBox.setSelectedIndex(0);
            pesTextField.setText("");
            emailTextField.setText("");
            AlimentsAnimalTable.getSelectionModel().clearSelection(); 
            animalsTable.getSelectionModel().clearSelection();
            borraAnimalButton.setEnabled(false);
            modificaAnimalButton.setEnabled(false);
    }//GEN-LAST:event_cancelAnimalButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    public static ArrayList<Animal> animals;
    public static TreeSet<Aliment> aliments;
    public static TreeSet<String> tipus;
    public static File f = new File("animals.dat");

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AlimentPanel;
    private javax.swing.JTable AlimentsAnimalTable;
    private javax.swing.JPanel AnimalPanel;
    private javax.swing.JTable animalsTable;
    private javax.swing.JButton borraAnimalButton;
    private javax.swing.JTextField calTextField;
    private javax.swing.JButton cancelAnimalButton;
    private javax.swing.JButton creaAlButton;
    private javax.swing.JButton creaAnimalButton;
    private javax.swing.JButton crudAlimentButton;
    private javax.swing.JButton crudAnimalButton;
    private javax.swing.JTextField emailTextField;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton llistarButton;
    private javax.swing.JPanel llistarPanel;
    private javax.swing.JTable llistarTable;
    private javax.swing.JButton modificaAnimalButton;
    private javax.swing.JTextField nomAlTextField;
    private javax.swing.JTextField nomTextField;
    private javax.swing.JTextField pesTextField;
    private javax.swing.JButton sortirButton;
    private javax.swing.JTextField tipusAlTextField;
    private javax.swing.JComboBox tipusComboBox;
    // End of variables declaration//GEN-END:variables

    private void guardaFitxer() {
        try (
                ObjectOutputStream out = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(f)));) {

            for (int i = 0; i < animals.size(); i++) {
                try {
                    Animal a = (Animal) animals.get(i);
                    out.writeObject(a);
                } catch (Exception ex) {
                    break;
                }
            }
            out.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(), "Error en la escriptura", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void carregaFitxer() throws IOException {
        animals = new ArrayList<>();
        aliments = new TreeSet<>();
        tipus = new TreeSet<>();

        if (f.exists()) {
            ObjectInputStream entrada = new ObjectInputStream(new BufferedInputStream(new FileInputStream(f)));

            while (true) {
                try {
                    Animal a = (Animal) entrada.readObject();
                    animals.add(a);
                    ArrayList<Aliment> la = a.get5menja();
                    aliments.addAll(la);
                    tipus.add(a.get2tipus());
                } catch (Exception ex) {
                    break;
                }
            }
            entrada.close();
        } else {
            JOptionPane.showMessageDialog(rootPane, "No s'ha carregat correctament. El fitxer no existeix.", "Error en la càrrega", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void setPrincipi() {        
        ModelTaula<Animal> mt = new ModelTaula(new String[]{"Nom", "Tipus", "Pes", "E-mail del propietari", "Aliments"}, MainFrame.animals, Animal.class);

        llistarTable.setModel(mt);
        llistarTable.setRowSelectionAllowed(false);
        
        Iterator<String> it = tipus.iterator();
        while(it.hasNext()){
          tipusComboBox.addItem(it.next());
        }
        
        animalsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        jPanel3.removeAll();
        jPanel3.revalidate();
        jPanel3.add(llistarPanel);
        jPanel3.revalidate();
        jPanel3.repaint();

    }
}

class ModelTaula<T> extends AbstractTableModel {

    final Class<T> typeParameterClass;

    private String[] columnNames;
    private List<T> dades;

    public ModelTaula(String[] nomColumnes, ArrayList<T> dades, Class<T> typeParameterClass) {
        this.typeParameterClass = typeParameterClass;

        this.columnNames = nomColumnes;
        this.dades = dades;
    }

    public ModelTaula(ArrayList<T> dades, Class<T> typeParameterClass) {
        this.typeParameterClass = typeParameterClass;
        if (dades != null && !dades.isEmpty()) {
            //Obtinc els noms de les columnes a partir de la reflexió de la classe
            //Class<?> classe = dades.get(0).getClass();
            Class<?> classe = this.typeParameterClass;

            //Anoto el nº de camps de la classe
            int ncamps = classe.getDeclaredFields().length;

            //Omplo l'array de noms de columna a partir del camps de la classe. Se suposa que el format dels noms dels camps 
            //és _xnom_camp, sent x un enter major o igual que 0, per això elimino els dígits i el _
            this.columnNames = new String[ncamps];

            for (int i = 0; i < ncamps; i++) {
                //Busquem el primer grup de _dígits numèrics del nom de camp
                Matcher matcher = Pattern.compile("_\\d+").matcher(classe.getDeclaredFields()[i].getName());
                matcher.find();
                //El nom que mostrarem serà a partir del següent caracter que hi ha després del _grup numèric trobat
                this.columnNames[i] = classe.getDeclaredFields()[i].getName().substring(matcher.group().length()).toUpperCase();
                //this.columnNames[i]=classe.getDeclaredFields()[i].getName().replaceAll("[_0-9]", "").toUpperCase();
                //this.columnNames[i]=classe.getDeclaredFields()[i].getName().replaceAll("[_\\d]", "").toUpperCase();
            }
        }
        this.dades = dades;
    }

    //Necessari per a que mostre el nom de les columnes passat al crear l'objecte
    @Override
    public String getColumnName(int column) {
        return columnNames[column];
    }

    //Necessari per a que mostre el número correcte de files de dades
    @Override
    public int getRowCount() {
        int cont = 0;

        if (dades != null) {
            cont = dades.size();
        }

        return cont;
    }

    //Necessari per a que mostre el número correcte de columnes 
    @Override
    public int getColumnCount() {

        int cont = 0;

        if (columnNames != null) {
            cont = columnNames.length;
        }

        return cont;
    }

    //Necessari per a que mostre les dades passades al crear l'objecte
    @Override
    public Object getValueAt(int rowIndex, int columnIndex) {
        //Si demanen la columna -1 vol dir que hem de retornar tot l'objecte contingut a la fila
        if (columnIndex == -1) {
            return dades.get(rowIndex);
        }
        Class<?> classe = this.typeParameterClass;
        //Class<?> classe = dades.get(0).getClass();
        //Anotem el nº de camps de la classe
        int ncamps = classe.getDeclaredFields().length;

        Method[] methods = new Method[ncamps];
        int i = 0;
        try {
            for (PropertyDescriptor pD : Introspector.getBeanInfo(classe).getPropertyDescriptors()) {
                Method m = pD.getReadMethod();
                if (m != null & !m.getName().equals("getClass")) {
                    methods[i++] = m;
                }
            }
        } catch (java.beans.IntrospectionException ex) {
            //Logger.getLogger(ModelTaula.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            return methods[columnIndex].invoke(dades.get(rowIndex));
        } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException ex) {
            Logger.getLogger(ModelTaula.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;

    }

}
